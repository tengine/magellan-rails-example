trdb:
  singleton: true
  image: redis
  # Dockerfile: https://raw.githubusercontent.com/docker-library/redis/docker-2.8.12/Dockerfile
  after_tasks:
    - name: "setup TD data"
      docker:
        detach: False
        name: magellan-tr-data
        image: groovenauts/magellan-tr-data
        links:
          - trdb:redis


rabbitmq:
  before_tasks:
    - name: "stop RabbitMQ container"
      command: docker stop rabbitmq
    - name: "remove RabbitMQ container"
      command: docker rm rabbitmq

    - name: "make RabbitMQ log directory"
      file:
        path: /var/log/rabbitmq
        force: yes
        state: directory

    - name: "change owner /var/log/rabbitmq to rabbitmq"
      docker:
        name: rabbitmq_dir_owner
        image: tutum/rabbitmq
        volumes:
          - /var/log/rabbitmq:/var/log/rabbitmq
        command: "chown -R rabbitmq:rabbitmq /var/log/rabbitmq"

  singleton: true
  image: tutum/rabbitmq
  # Dockerfile: https://raw.githubusercontent.com/tutumcloud/tutum-docker-rabbitmq/master/Dockerfile
  ports:
    - 5672:5672
    - 15672:15672
  env:
    - RABBITMQ_USER=magellan
    - RABBITMQ_PASS=mypass
  volumes:
    - /var/log/rabbitmq:/var/log/rabbitmq

  after_tasks:
    - name: "wait to ready rabbitmq"
      wait_for: delay=3 port=5672
    - name: "wait to ready rabbitmq admin"
      wait_for: port=15672
    - name: "setup Queues and Exchanges"
      docker:
        detach: False
        name: magellan-setup_tools
        image: groovenauts/magellan-setup_tools
        links:
          - trdb:redis
          - rabbitmq:rabbitmq
        command: ruby ./rabbitmq customer1.magellan-rails-example 0.0.1 rails transaction-router pswd1 pswd2


tr:
  singleton: true
  image: groovenauts/magellan-transaction-router
  # Dockerfile: https://raw.githubusercontent.com/tengine/magellan-transaction-router-broadleaf/feature/integration01/Dockerfile?token=18912__eyJzY29wZSI6IlJhd0Jsb2I6dGVuZ2luZS9tYWdlbGxhbi10cmFuc2FjdGlvbi1yb3V0ZXItYnJvYWRsZWFmL2ZlYXR1cmUvaW50ZWdyYXRpb24wMS9Eb2NrZXJmaWxlIiwiZXhwaXJlcyI6MTQwNzIzMDg4MX0%3D--2ca5fb4de69eca8cbc5cda747b8716ed85ce89a2
  ports:
    - 3000:3000
  links:
    - trdb:redis
    - rabbitmq:rabbitmq
  tty: True
  stdin_open: True
  command: /bin/bash ./boot.sh




app:
  before_tasks:
    - name: "make application log directory"
      file:
        path: /var/log/application
        force: yes
        state: directory

  image: groovenauts/magellan-rails-example
  # Dockerfile: "./Dockerfile"
  ports:
    - 3000:3000
  links:
    - rabbitmq:rabbitmq
  env:
    - VHOST=/customer1.magellan-rails-example
    - REQEST_QUEUE=customer1.magellan-rails-example.0.0.1.rails
    - RESPONSE_EXCHANGE=customer1.magellan-rails-example.reply
    - RABBITMQ_USER=customer1.magellan-rails-example
    - RABBITMQ_PASS=pswd2
    - SECRET_KEY_BASE="$STAGE.SECRET_KEY_BASE"
  volumes:
    - /var/log/application:/usr/src/app/log
  command: bundle exec magellan-rails
